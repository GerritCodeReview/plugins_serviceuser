{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0607f8ee_35977030",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2021-02-12T12:43:21Z",
      "side": 1,
      "message": "or as local Gerrit users created using the create-account SSH command.",
      "range": {
        "startLine": 10,
        "startChar": 7,
        "endLine": 10,
        "endChar": 19
      },
      "revId": "b635b56309647e94ba1b82bae776bbbd00cda1e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e43ec29_9b93360a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/serviceuser/RegisterServiceUser.java",
        "patchSetId": 4
      },
      "lineNbr": 73,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2021-02-12T12:43:21Z",
      "side": 1,
      "message": "These constants already exist in the CreateServiceUser. Import them instead of duplicating their declarations here.",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 73,
        "endChar": 49
      },
      "revId": "b635b56309647e94ba1b82bae776bbbd00cda1e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65883fff_6041114d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/serviceuser/RegisterServiceUser.java",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2021-02-12T12:43:21Z",
      "side": 1,
      "message": "Consider reusing CreateServiceUser.Input instead of duplicating the declaration here.",
      "revId": "b635b56309647e94ba1b82bae776bbbd00cda1e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48e992f5_25983815",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/serviceuser/RegisterServiceUser.java",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2021-02-12T12:43:21Z",
      "side": 1,
      "message": "Just compare account IDs:\n\n  if (!requestingUser.getAccountId().equals(user.getAccountId()) \u0026\u0026 ... )",
      "range": {
        "startLine": 147,
        "startChar": 9,
        "endLine": 151,
        "endChar": 50
      },
      "revId": "b635b56309647e94ba1b82bae776bbbd00cda1e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dad69636_36290b58",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/serviceuser/RegisterServiceUser.java",
        "patchSetId": 4
      },
      "lineNbr": 154,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2021-02-12T12:43:21Z",
      "side": 1,
      "message": "Could also be just a response with the 409 code. The request is not really bad (like non-parseable or something like that)... just preconditions are missing.",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 154,
        "endChar": 96
      },
      "revId": "b635b56309647e94ba1b82bae776bbbd00cda1e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c403321_fa8843be",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/serviceuser/RegisterServiceUser.java",
        "patchSetId": 4
      },
      "lineNbr": 159,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2021-02-12T12:43:21Z",
      "side": 1,
      "message": "Should it be really a bad request? It is a no-op and we could return 204 when there is nothing to do.",
      "revId": "b635b56309647e94ba1b82bae776bbbd00cda1e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8eb9c10_62c9f61f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/serviceuser/RegisterServiceUser.java",
        "patchSetId": 4
      },
      "lineNbr": 170,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2021-02-12T12:43:21Z",
      "side": 1,
      "message": "Note that Optional.get() will throw NoSuchElementException if a value is not present. Since in this case you really want null a correct coding would be:\n\n  creator \u003d requestingUser.getUserName().orElse(null);",
      "revId": "b635b56309647e94ba1b82bae776bbbd00cda1e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe19631f_9a983c0e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/serviceuser/RegisterServiceUser.java",
        "patchSetId": 4
      },
      "lineNbr": 171,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2021-02-12T12:43:21Z",
      "side": 1,
      "message": "Better use the asIdentifiedUser method:\n\n  requestingUser.asIdentifiedUser()",
      "range": {
        "startLine": 171,
        "startChar": 18,
        "endLine": 171,
        "endChar": 51
      },
      "revId": "b635b56309647e94ba1b82bae776bbbd00cda1e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16531fd0_895b69a4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/serviceuser/RegisterServiceUser.java",
        "patchSetId": 4
      },
      "lineNbr": 178,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2021-02-12T12:43:21Z",
      "side": 1,
      "message": "Use null instead, see the next comment.\n\nOptional: use AccountGroup.UUID as the type and only resolve it to string when necessary (line 192).",
      "revId": "b635b56309647e94ba1b82bae776bbbd00cda1e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0613a29_2a185399",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/serviceuser/RegisterServiceUser.java",
        "patchSetId": 4
      },
      "lineNbr": 191,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2021-02-12T12:43:21Z",
      "side": 1,
      "message": "Why do we handle non-presence of the creator differently from the non-presence of the owner? Use null in both cases.",
      "revId": "b635b56309647e94ba1b82bae776bbbd00cda1e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}